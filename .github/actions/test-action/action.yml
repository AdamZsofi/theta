name: 'Gradle build action'
description: 'Running gradle build without tests'
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
    - name: Setup java 17
      uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
      with:
        distribution: temurin
        java-version: 17
    - name: build gradle
      uses: ./.github/actions/cache-build
      with:
        arguments: test

    - name: Badge name generation
      if: ${{ always() }}
      id: name
      shell: bash
      run: |
        export folder=badges/test-${{ runner.os }}
        mkdir -p $folder
        echo "folder=$folder" >> $GITHUB_OUTPUT 
        echo "name=$folder/badge.svg" >> $GITHUB_OUTPUT 
        echo "label=${{ runner.os }} test" >> $GITHUB_OUTPUT 
    - name: Positive outcome badge
      uses: emibcn/badge-action@v2.0.2
      with:
        label: ${{ steps.name.outputs.label }}
        status: Success
        color: 'green'
        path: ${{ steps.name.outputs.name }}
    - name: Negative outcome badge
      if: ${{ failure() }}
      uses: emibcn/badge-action@v2.0.2
      with:
        label: ${{ steps.name.outputs.label }}
        status: Failure
        color: 'red'
        path: ${{ steps.name.outputs.name }}
    - name: setup rsync for windows
      if: runner.os == 'Windows'
      uses: GuillaumeFalourd/setup-rsync@v1.1
    # - name: Windows path hack
    #   shell: bash
    #   id: winhack
    #   run: |
    #     export folder=${{ steps.name.outputs.folder }}
    #     if [ "${{ runner.os }}" = "Windows" ]; then
    #         folder="/cygdrive/$PWD/$folder"
    #     fi
    #     echo "fullpath=$folder" >> $GITHUB_OUTPUT 
    - name: Deploy badges
      if: github.ref == 'refs/heads/master' && ${{ always() }}
      uses: leventeBajczi/github-pages-deploy-action-winfix@0d5b045d6a9f5afebafd045b50429847dcc939c6 # v0.3
      with:
        branch: badges
        folder: ${{ steps.name.outputs.folder }}
        target-folder: ${{ steps.name.outputs.folder }}
        single-commit: true